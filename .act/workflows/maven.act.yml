# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven | GraalVM (JDK 21) | act

on:
  push:
    branches: [ "main", "dev", "feature/wcj" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ACT: true
      MAVEN_REPO_PATH: "/home/runner/m2/repository"

    steps:
      - uses: actions/checkout@v4

      - name: Verify Java & GraalVM & Maven
        run: |
          java --version
          native-image --version
          mvn --version

      - name: GitHub actions
        if: ${{ !env.ACT }}
        run: echo "This runs only on GitHub"

      - name: Act actions
        if: ${{ env.ACT }}
        run: echo "This runs only in act"

      - name: Set up Maven environment
        run: echo "MAVEN_REPO=${MAVEN_REPO_PATH}" >> $GITHUB_ENV

      - name: Configure Maven
        run: |
          mkdir -p /home/runner/.m2
          echo "<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"
            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"
            xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd\">
            <localRepository>/home/runner/m2/repository</localRepository>
            <mirrors>
              <mirror>
                <id>aliyunmaven</id>
                <mirrorOf>central</mirrorOf>
                <name>Aliyun Maven</name>
                <url>https://maven.aliyun.com/repository/central</url>
              </mirror>
            </mirrors>
          </settings>" > /home/runner/.m2/settings.xml

      - name: Deploy with Maven (Local Repository)
        run: mvn clean -DskipTests source:jar deploy

      - name: Build with Maven
        run: mvn -B package --file pom.xml
